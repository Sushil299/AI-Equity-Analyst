# -*- coding: utf-8 -*-
"""admin_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-kL48zJMZD2sqabS-FeKumgjGmbYXeYY
"""

import streamlit as st
import requests
from datetime import datetime
import os
import io

# Backend URL (Replace with your actual Render URL)
BACKEND_URL = "https://ai-equity-analyst.onrender.com"

st.title("üì§ Admin Panel - Upload Documents")

# File Upload Section
st.sidebar.header("üì§ Upload Earnings Documents")
company_name = st.sidebar.text_input("Company Name")
document_date = st.sidebar.date_input("Document Date")
document_type = st.sidebar.selectbox("Document Type", ["Earnings Call", "Investor Presentation", "Analyst Call"])
uploaded_file = st.sidebar.file_uploader("Upload PDF File", type=["pdf"])

if st.sidebar.button("Upload File"):
    if uploaded_file and company_name and document_date and document_type:
        try:
            # Convert file to bytes and send as a proper file object
            file_bytes = io.BytesIO(uploaded_file.getvalue())  # Convert to file-like object
            files = {"file": ("document.pdf", file_bytes, "application/pdf")}  # ‚úÖ Correct format

            data = {
                "company_name": company_name,
                "document_date": document_date.strftime("%Y-%m-%d"),
                "document_type": document_type,
            }

            response = requests.post(f"{BACKEND_URL}/upload/", files=files, data=data)

            if response.status_code == 200:
                st.sidebar.success("‚úÖ File uploaded successfully!")
            else:
                st.sidebar.error(f"‚ùå Upload failed! Backend Error: {response.text}")

        except Exception as e:
            st.sidebar.error(f"‚ùå Upload failed! Error: {str(e)}")

    else:
        st.sidebar.warning("‚ö†Ô∏è Please fill all fields and upload a file.")